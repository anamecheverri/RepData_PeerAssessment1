View(tidy)
View(tidy)
write.table(tidy,file="tidy.txt",row.name=FALSE)
gwd()
setwd("~/datasciencecoursera/cleaningdata")
getwd()
features <-read.table("UCI HAR Dataset/features.txt")
head(features)
library (dplyr)
library(tidyr)
#Reads features names
features <-read.table("UCI HAR Dataset/features.txt")
head(features)
dim(features)
#Reads activity codes
activities <-read.table("UCI HAR Dataset/activity_labels.txt")
head(activities)
class(activities)
dim(activities)
#Reads training dataset
subject_train <-read.table("UCI HAR Dataset/train/subject_train.txt")
colnames(subject_train)<-c("Subject")
head(subject_train)
dim(subject_train)
x_train <-read.table("UCI HAR Dataset/train/X_train.txt")
head(x_train)
dim(x_train)
y_train <-read.table("UCI HAR Dataset/train/y_train.txt")
colnames(y_train)<-c("Activities")
y_train$Activities<-factor(y_train$Activities)
levels(y_train$Activities)<-activities$V2
head(y_train)
dim(y_train)
y_train
#Reads test dataset
subject_test <-read.table("UCI HAR Dataset/test/subject_test.txt")
colnames(subject_test)<-c("Subject")
head(subject_test)
dim(subject_test)
x_test <-read.table("UCI HAR Dataset/test/X_test.txt")
head(x_test)
dim(x_test)
y_test <-read.table("UCI HAR Dataset/test/y_test.txt")
colnames(y_test)<-c("Activities")
y_test$Activities<-factor(y_test$Activities)
levels(y_test$Activities)<-activities$V2
head(y_test)
dim(y_test)
#Changes variable names to actual features
colnames(x_train)<-features$V2
colnames (x_test)<-features$V2
#Consolidates all variables in a single file
#Training data
all_data_train <-cbind(subject_train,y_train,x_train)
#Test data
all_data_test <-cbind(subject_test,y_test,x_test)
#Merges 2 files
all_data <-rbind(all_data_train,all_data_test)
dim(all_data)
all_data_df <- tbl_df(all_data)
#Select only the variables for means and standard deviations
data_subset <- select(all_data_df,Subject, Activities,contains("mean()"),contains("std()"))
dim(data_subset)
head(data_subset)
#new dataset average subject and activity for each variable
data_subset_group <-group_by(data_subset,Subject,Activities)
tidy<-summarise_each(data_subset_group,funs(mean))
tidy
write.table(tidy,file="tidy.txt",row.name=FALSE)
library (dplyr)
library(tidyr)
#Reads features names
features <-read.table("UCI HAR Dataset/features.txt")
head(features)
dim(features)
#Reads activity codes
activities <-read.table("UCI HAR Dataset/activity_labels.txt")
head(activities)
class(activities)
dim(activities)
#Reads training dataset
subject_train <-read.table("UCI HAR Dataset/train/subject_train.txt")
colnames(subject_train)<-c("Subject")
head(subject_train)
dim(subject_train)
x_train <-read.table("UCI HAR Dataset/train/X_train.txt")
head(x_train)
dim(x_train)
y_train <-read.table("UCI HAR Dataset/train/y_train.txt")
colnames(y_train)<-c("Activities")
y_train$Activities<-factor(y_train$Activities)
levels(y_train$Activities)<-activities$V2
head(y_train)
dim(y_train)
y_train
#Reads test dataset
subject_test <-read.table("UCI HAR Dataset/test/subject_test.txt")
colnames(subject_test)<-c("Subject")
head(subject_test)
dim(subject_test)
x_test <-read.table("UCI HAR Dataset/test/X_test.txt")
head(x_test)
dim(x_test)
y_test <-read.table("UCI HAR Dataset/test/y_test.txt")
colnames(y_test)<-c("Activities")
y_test$Activities<-factor(y_test$Activities)
levels(y_test$Activities)<-activities$V2
head(y_test)
dim(y_test)
#Changes variable names to actual features
colnames(x_train)<-features$V2
colnames (x_test)<-features$V2
#Consolidates all variables in a single file
#Training data
all_data_train <-cbind(subject_train,y_train,x_train)
#Test data
all_data_test <-cbind(subject_test,y_test,x_test)
#Merges 2 files
all_data <-rbind(all_data_train,all_data_test)
dim(all_data)
all_data_df <- tbl_df(all_data)
#Select only the variables for means and standard deviations
data_subset <- select(all_data_df,Subject, Activities,contains("mean()"),contains("std()"))
dim(data_subset)
head(data_subset)
dim(data_subset)
setwd("~/datasciencecoursera/cleaningdata")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile= "quiz3.csv", method="curl")
survey <-read.table("quiz3.csv",sep=",",header=TRUE)
head(survey)
summary(survey)
dim(survey)
survey_df <- tbl_df(survey)
print(survey_df)
select(survey(df),ACR ==3)
select(survey_df,ACR ==3)
agricultureLogical<-select(survey_df,ACR ==3,AGS==6)
agricultureLogical
agricultureLogical<-subset(survey,ACR ==3 &AGS==6)
agricultureLogical
which(agricultureLogical)
agricultureLogical<-survey$ACR ==3 & survey$AGS==6
agricultureLogical
which(agricultureLogical)
library("jpeg")
install.packages("jpeg")
library("jpeg")
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = FALSE)
animage<-readJPEG("myimage.jpg", native = FALSE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile= "myimage.jpg", method="curl")
animage<-readJPEG("myimage.jpg", native = FALSE)
animage
quantile(animage,probs=(.3,.8))
quantile(animage,probs=c(.3,.8))
animage<-readJPEG("myimage.jpg", native = TRUE)
animage
quantile(animage,probs=c(.3,.8))
library (dplyr)
library(tidyr)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile= "gdp.csv", method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile= "edu.csv", method="curl")
edu <-read.table("edu.csv",sep=",",header=TRUE)
edu <-read.table("edu.csv",header=TRUE)
gdp<-read.table("gdp.csv",sep=',',header=TRUE)
edu <-read.table("edu.csv",header=TRUE)
gdp<-read.table("gdp.csv",sep=',',header=TRUE,quote = "",stringsAsFactors = FALSE)
edu <-read.table("edu.csv",sep=',',header=TRUE,quote = "",stringsAsFactors = FALSE)
edu <-read.table("edu.csv",sep=',',header=TRUE,stringsAsFactors = FALSE)
edu <-read.table("edu.csv",sep=',',header=TRUE,stringsAsFactors = FALSE,fill=TRUE)
edu <-read.table("edu.csv",sep=',',header=TRUE,quote="",stringsAsFactors = FALSE,fill=TRUE)
edu <-read.csv("edu.csv",sep=',',header=TRUE,quote="",stringsAsFactors = FALSE,fill=TRUE)
gdp<-read.csv("gdp.csv",sep=',',header=TRUE,quote = "",stringsAsFactors = FALSE)
edu <-read.csv("edu.csv",sep=',',header=TRUE,quote="",stringsAsFactors = FALSE)
head(gdp,n=1)
gdp<-read.csv("gdp.csv",sep=',',header=TRUE,quote = "",stringsAsFactors = FALSE,skip=1)
gdp<-read.csv("gdp.csv",sep=',',header=TRUE,quote = "",stringsAsFactors = FALSE,skip=2)
gdp<-read.csv("gdp.csv",sep=',',header=TRUE,quote = "",stringsAsFactors = FALSE,skip=3)
gdp<-read.csv("gdp.csv",sep=',')
head(gdp,n=1)
head(gdp)
gdp<-read.csv("gdp.csv",sep=',',skip=5)
head(gdp)
gdp<-read.csv("gdp.csv",sep=',',skip=4)
head(gdp)
edu <-read.csv("edu.csv",sep=',')
head(edu)
head(edu,n=1)
head(edu)
head(gdp)
gdp$X
head(edu,n=1)
edu$CountryCode
merge(gdp,edu,by.x="X",by.y="CountryCode")
merge(gdp,edu,by.x="X",by.y="CountryCode",all=TRUE)
merge(gdp,edu,by.x="X",by.y="CountryCode")
merge(gdp,edu,by.x="X",by.y="CountryCode",all=FALSE)
gdp$X
dim(gdp)
dim(edu)
gdp<-read.csv("gdp.csv",sep=',',skip=4,fill=TRUE)
dim(gdp)
gdp<-read.csv("gdp.csv",sep=',',skip=4,fill=TRUE,stringsAsFactors=FALSE)
dim(gdp)
gdp
head(gdp)
gdp1<-na.rm(gdp)
gdp1<-gdp[!is.na(gdp)]
dim(gdp1)
gdp<-read.csv("gdp.csv",sep=',',skip=4,fill=TRUE,stringsAsFactors=FALSE,nrows=190)
dim(gdp)
gdp
merge(gdp,edu,by.x="X",by.y="CountryCode",all=FALSE)
me<-merge(gdp,edu,by.x="X",by.y="CountryCode",all=FALSE)
head(me)
head(me,n=1)
arrange(me,desc(X.4))
arrange(me,X.4)
head(me,n=1)
me$X.4
arrange(me,X.4)
me_df <- tbl_df(me)
me_df
arrange(me_df,X.4)
arrange(me_df,as.number(X.4))
arrange(me_df,as.numeric(X.4))
pp<-arrange(me_df,as.numeric(X.4))
pp
head(pp)
head(pp,n=200)
head(pp,n=13)
dim(me)
me_df$Income.Group
data_subset_group <-group_by(me_df,Income.Group)
tidy<-summarise_each(data_subset_group,funs(mean))
tidy
pp
quantile(as.numeric(pp$X.4),c(.2,.4,.6,.8,1)
)
quantile(as.numeric(pp$X.4),c(.2,.4,.6,.8,1),na.rm=TRUE)
pp$group <-cut(as.numeric(pp$X.4),breaks=quantile(as.numeric(pp$X.4),c(.2,.4,.6,.8,1)))
pp$group <-cut(as.numeric(pp$X.4),breaks=quantile(as.numeric(pp$X.4),c(.2,.4,.6,.8,1),na.rm=TRUE))
pp$group
table(pp$group)
mutate(pp,incxx=as.numeric(X.4))
me_df$group <-cut(as.numeric(me_df$X.4),breaks=quantile(as.numeric(me_df$X.4),c(.2,.4,.6,.8,1),na.rm=TRUE))
me_df$group
me_df$X.4
me_df<-mutate(me_df,va=as.numeric(X.4)
)
me_df$X.4
me_df$ng<-as.numeric$X.4
mutate(me_df,kk=as.numeric(X.4))
me_df$va
me_df$kk
me_df$X.4
as.numeric(me_df$X.4)
class(me_df$X.4)
gdp<-read.csv("gdp.csv",sep=',',skip=4,fill=TRUE,stringsAsFactors=FALSE,nrows=190,strip.white=T)
dim(gdp)
gdp
dim(edu)
edu <-read.csv("edu.csv",sep=',',strip.white=T)
head(edu,n=1)
head(gdp)
gdp$X
edu$CountryCode
me<-merge(gdp,edu,by.x="X",by.y="CountryCode",all=FALSE)
dim(me)
me_df <- tbl_df(me)
me_df$Income.Group
data_subset_group <-group_by(me_df,Income.Group)
tidy<-summarise_each(data_subset_group,funs(mean))
tidy
me_df$X.4
as.numeric(me_df$X.4)
install.packages("stringr")
library(stringr)
as.numeric(str_trim(me_df$X.4))
str_trim(me_df$X.4)
me_dfX.4<-str_trim(me_df$X.4)
me_df$X.4
me_df$X.4<-str_trim(me_df$X.4)
me_df$X.4
as.numeric(str_trim(me_df$X.4))
me_df$X.4
as.numeric(me_df$X.4)
as.numeric(factor(me_df$X.4))
me_df$X.4<-str_trim(me_df$X.4)
me_df$X.4
me_df$X.4<-factor(str_trim(me_df$X.4))
me_df$X.4
as.numeric(me_df$X.4)
as.numeric(levels(me_df$X.4)
as.numeric(levels(me_df$X.4))
as.numeric(levels(me_df$X.4))
as.numeric(levels(me_df$X.4)[me_df$X.4])
as.numeric(as.character(me_df$X.4)
as.numeric(as.character(me_df$X.4))
as.numeric(as.character(me_df$X.4))
me_df$X.4<-factor(str_trim(me_df$X.4))
as.numeric(as.character(me_df$X.4))
as.character(me_df$X.4)
as.numeric(as.character(me_df$X.4))
p<-c("1","2")
as.numeric(p)
class(p)
me_df$X.4<-str_trim(me_df$X.4)
class(me_df$X.4)
as.numeric(as.character(me_df$X.4))
as.integer(as.character(me_df$X.4))
me_df$X.4
edu <-read.csv("edu.csv",sep=',',strip.white=T,stringsAsFactors=FALSE)
head(edu,n=1)
head(gdp)
gdp$X
edu$CountryCode
me<-merge(gdp,edu,by.x="X",by.y="CountryCode",all=FALSE)
dim(me)
me_df <- tbl_df(me)
me_df$Income.Group
data_subset_group <-group_by(me_df,Income.Group)
tidy<-summarise_each(data_subset_group,funs(mean))
tidy
me_df$X.4<-str_trim(me_df$X.4)
me_df$X.4
as.integer(as.character(me_df$X.4))
as.numeric(me_df$X.4)
me_df$X.4<- as.numeric(me_df$X.4)
me_df$X.4<- as.numeric(as.character(me_df$X.4))
me_df$X.4
me_df$X.4
edu <-read.csv("edu.csv",sep=',',strip.white=T,stringsAsFactors=FALSE)
head(edu,n=1)
head(gdp)
gdp$X
edu$CountryCode
me<-merge(gdp,edu,by.x="X",by.y="CountryCode",all=FALSE)
dim(me)
me_df <- tbl_df(me)
me_df$Income.Group
data_subset_group <-group_by(me_df,Income.Group)
tidy<-summarise_each(data_subset_group,funs(mean))
tidy
me_df$X.4<-str_trim(me_df$X.4)
me_df$X.4
me_df$X.4<- as.numeric(as.character(me_df$X.4))
me_df$X.4
me_df$X.4<-str_trim(me_df$X.4)
me_df$X.4
edu <-read.csv("edu.csv",sep=',',strip.white=T,stringsAsFactors=FALSE)
head(edu,n=1)
head(gdp)
gdp$X
edu$CountryCode
me<-merge(gdp,edu,by.x="X",by.y="CountryCode",all=FALSE)
dim(me)
me_df <- tbl_df(me)
me_df$Income.Group
data_subset_group <-group_by(me_df,Income.Group)
tidy<-summarise_each(data_subset_group,funs(mean))
tidy
me_df$kk<-str_trim(me_df$X.4)
me_df$kk
me_df$kk<- as.numeric(as.character(me_df$kk))
me_df$kk
me_df$kk<- as.numeric(as.character(me_df$X.4))
me_df$kk
me_df$X.4
me_df$X.4<-str_replace_all(me_df$X.4,",","")
me_df$X.4
me_df$X.4<- as.numeric(as.character(me_df$X.4))
me_df$X.4
me_df$group <-cut(me_df$X.4,breaks=quantile(me_df$X.4,c(.2,.4,.6,.8,1),na.rm=TRUE))
me_df$group
table(me_df$group,me_df$Income.Group)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ", destfile= "quiz4.csv", method="curl")
dat <-read.table("quiz4.csv",sep=",",header=TRUE)
head(dat)
names(dat)
p <- strsplit(names(dat),value=TRUE)
p <- strsplit(names(dat),"wgtp")
p
p[[123]]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ", destfile= "quiz42.csv", method="curl")
dat <-read.table("quiz42.csv",sep=",",header=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ", destfile= "gdp4.csv", method="curl")
read.csv("gdp4.csv",sep=',',skip=4,fill=TRUE,stringsAsFactors=FALSE,nrows=190,strip.white=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv ", destfile= "quiz4.csv", method="curl")
dat <-read.csv("quiz4.csv",sep=",",header=TRUE)
head(dat)
names(dat)
p <- strsplit(names(dat),"wgtp")
p
p[[123]]
read.csv("gdp4.csv",sep=',',skip=4,fill=TRUE,stringsAsFactors=FALSE,nrows=190,strip.white=T)
head(dat)
names(dat)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ", destfile= "gdp4.csv", method="curl")
dat<-read.csv("gdp4.csv",sep=',',skip=4,fill=TRUE,stringsAsFactors=FALSE,nrows=190,strip.white=T)
head(dat)
dat$X.4<-str_replace_all(dat$X.4,",","")
dat$X.4 <-gsub(",","",dat$X.4)
dat$X.4
mean(dat$X.4)
mean(isnumeric(dat$X.4))
mean(as.numeric(dat$X.4))
names(dat)
head(dat,1)
grep("^United",dat$X.3)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile= "edu4.csv", method="curl")
dat<-read.csv("gdp4.csv",sep=',')
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv ", destfile= "gdp4.csv", method="curl")
gdp<-read.csv("gdp4.csv",sep=',',skip=4,fill=TRUE,stringsAsFactors=FALSE,nrows=190,strip.white=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile= "edu4.csv", method="curl")
edu<-read.csv("gdp4.csv",sep=',')
head(gdp,1)
head(edu,1)
head(edu
head(edu)
head(edu)
edu<-read.csv("gdp4.csv",header=TRUE,sep=',')
head(gdp,1)
head(edu)
edu<-read.csv("edu4.csv",header=TRUE,sep=',')
head(gdp,1)
head(edu)
names(edu)
head(edu,1)
edu <-read.csv("edu.csv",sep=',',header=TRUE,strip.white=T,stringsAsFactors=FALSE)
head(gdp,1)
head(edu)
names(edu)
gdp$X
edu$Short.Code
names(edu)
edu$Short.Name
names(edu)
edu$Table.Name
names(edu)
edu$CountryCode
gdp$X
me<-merge(gdp,edu,by.x="X",by.y="CountryCode",all=FALSE)
names(gdp)
names(edu)
head(edu,1)
edu$PPP.survey.year
grep("June",edu)
grep("June",edu,value=TRUE)
grep (".*Fiscal year end: June,me)
grep ((".*Fiscal year end: June),me)
grep (".*Fiscal year end: June",me)
head(me,1)
head(me,1)
head(me,10)
grep (".*Fiscal year end: June",me$Special.Notes)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
y(sampletimes)
class(sampletimes)
class(sampleTimes)
grep("2012",sampleTimes)
table(grepl("2012",sampleTimes))
sampleTimes[1]
weekdays(sampleTimes[1])
table(grelp("Monday",weekdays(sampleTimes)))
table(grepl("Monday",weekdays(sampleTimes)))
grepl("2012",sampleTimes,value="TRUE")
grepl("2012",sampleTimes)
p<-grep("2012",sampleTimes,value=TRUE)
p
table(grepl("Monday",weekdays(p)))
table(grepl("Monday",weekdays(date(p))))
p<-as.Date(grep("2012",sampleTimes,value=TRUE))
p
table(grepl("Monday",weekdays(date(p))))
table(grepl("Monday",weekdays(p)))
install.packages("twitterR")
install.packages("twitteR")
install.packages("Rfacebook")
setwd("~/datasciencecoursera/Reproducible Research/assignment1/RepData_PeerAssessment1")
dat <-read.table("activity.csv",sep=",",header=TRUE,stringsAsFactors=FALSE)
stepsperday <-aggregate(dat$steps~dat$date,FUN=sum)
colnames(stepsperday)<-c("date","steps")
hist(stepsperday$steps,main="Steps Histogram",col="red",xlab="Total Daily Steps")
mean(stepsperday$steps)
median(stepsperday$steps)
stepsperinterval <-aggregate(dat$steps~dat$interval,FUN=mean)
colnames(stepsperinterval)<-c("interval","steps")
plot(stepsperinterval$interval,type='l',stepsperinterval$steps,col="red",ylab="Average Steps",xlab="Interval",main="Average Steps per Interval")
stepsperinterval[max(stepsperinterval$steps)==stepsperinterval$steps,]
nrow(dat[dat$steps=="NA",])
nrow(dat)
newdat<-merge(dat,stepsperinterval,by.x="interval",by.y="interval",all=FALSE)
newdat$steps.x<-ifelse(is.na(newdat$steps.x),newdat$steps.y,newdat$steps.x)
newstepsperday <-aggregate(newdat$steps.x~newdat$date,FUN=sum)
colnames(newstepsperday)<-c("date","steps")
hist(newstepsperday$steps,main="Steps Histogram",col="red",xlab="Total Daily Steps")
mean(newstepsperday$steps)
median(newstepsperday$steps)
newdat$dattype<-ifelse(weekdays(as.Date(newdat$date))=="Saturday"|weekdays(as.Date(newdat$date))=="Sunday","Weekend","Weekday")
datweekday<-newdat[newdat$dattype=="Weekday",]
datweekend<-newdat[newdat$dattype=="Weekend",]
weekdayperinterval <-aggregate(datweekday$steps.x~datweekday$interval,FUN=mean)
colnames(weekdayperinterval)<-c("interval","steps")
weekendperinterval <-aggregate(datweekend$steps.x~datweekend$interval,FUN=mean)
colnames(weekendperinterval)<-c("interval","steps")
par(mfrow=c(2,1))
plot(weekendperinterval$interval,type='l',weekendperinterval$steps,col="red",ylab="Average Steps",xlab="Interval",main="Weekends")
plot(weekdayperinterval$interval,type='l',weekdayperinterval$steps,col="red",ylab="Average Steps",xlab="Interval",main="Weekdays")
